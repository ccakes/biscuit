var N=null,E="",T="t",U="u",searchIndex={};
var R=["issued_at","not_before","expiry","issuer","audience","subject","biscuit::errors","expected","biscuit::errors::Error","actual","DecodeError","ValidationError","unspecified","biscuit::jwa","Algorithms meant for content encryption. See RFC7518#5","result","encryptionresult","contentencryptionalgorithm","encryptionoptions","biscuit","registered","cek_algorithm","Compression algorithm applied to plaintext before…","biscuit::jwe","Create a new encrypted JWE","keymanagementalgorithm","encrypted","compact","Convenience method to get a mutable reference to the…","header","Convenience method to get a reference to the header from…","x509_url","X.509 Public key cerfificate URL. This is currently not…","x509_chain","X.509 public key certificate chain. This is currently not…","x509_fingerprint","X.509 Certificate thumbprint. This is currently not…","key_type","The \"oth\" (other primes info) parameter contains an array…","The \"crv\" (curve) parameter identifies the cryptographic…","Common JWK parameters","algorithm","Signature","EllipticCurve","Elliptic curve (EC) key","Octet symmetric key","OctetKeyPair","Octet key pair","Key type value for an Elliptic Curve Key.","Curve25519","Curve448","description","Description of the type of key","octet_key","Return the byte sequence of an octet key","Registered header fields","private","Private header fields","RegisteredHeader","media_type","content_type","Content Type of the secured payload. Typically used to…","web_key_url","The JSON Web Key Set URL. This is currently not…","The JSON Web Key. This is currently not implemented…","The Key ID. This is currently not implemented (correctly).…","critical","List of critical extended headers. This is currently not…","Compact","Embedded header","payload","biscuit::jws","secret","signaturealgorithm","Decode a token into the JWT struct and verify its…","payload_mut","Convenience method to get a reference to the claims set…","header_mut","Convenience method to get a reference to the header from a…","Consumes self, and move the payload and header out and…","Without decoding and verifying the JWS, retrieve a copy of…","validate","Validate the temporal claims in the decoded token","validationoptions","from_registered_header","Convenience function to create a header with only…","registeredheader","base64url","compactpart","iterator","validationerror","validation","temporaloptions","stringoruri","to_owned","clone_into","to_string","try_from","try_into","borrow_mut","equivalent","from_bytes","to_bytes","JSON serialize the part and return the JSON string bytes","type_id","biscuit::jwk","formatter","parseerror","position","ordering","Convert a sequence of bytes into Self","to_base64","from_base64","decodeerror","keymanagementalgorithmtype","rsakeyparameters","claimpresenceoptions","default","cekalgorithmheader","commonparameters","ellipticcurvekeyparameters","octetkeyparameters","octetkeypairparameters","registeredclaims","claimsset","compressionalgorithm","publickeyuse","keyoperations","algorithmparameters","otherprimesinfo","ellipticcurvekeytype","rsakeytype","octetkeytype","octetkeypairtype","ellipticcurve","singleormultiple","timestamp","from_str","serialize","deserialize","Return the serialization of this URL.","pathsegmentsmut","ParseError","TemporalOptions","RegisteredClaims","ClaimPresenceOptions","ValidationOptions","ClaimsSet","Validation","SingleOrMultiple","StringOrUri","SecureRandom","EncryptionResult","EncryptionOptions","Algorithm","SignatureAlgorithm","KeyManagementAlgorithm","KeyManagementAlgorithmType","ContentEncryptionAlgorithm","CekAlgorithmHeader","CompressionAlgorithm","CommonParameters","EllipticCurveKeyParameters","RSAKeyParameters","OtherPrimesInfo","OctetKeyParameters","OctetKeyPairParameters","PublicKeyUse","KeyOperations","AlgorithmParameters","EllipticCurveKeyType","RSAKeyType","OctetKeyType","OctetKeyPairType","CompactPart","Base64Url","Timestamp"];

searchIndex["biscuit"]={"doc":"Build Status Crates.io Repository Documentation dependency…","i":[[4,R[142],R[19],"Errors that can occur during parsing.",N,N],[13,"EmptyHost",E,E,0,N],[13,"IdnaError",E,E,0,N],[13,"InvalidPort",E,E,0,N],[13,"InvalidIpv4Address",E,E,0,N],[13,"InvalidIpv6Address",E,E,0,N],[13,"InvalidDomainCharacter",E,E,0,N],[13,"RelativeUrlWithoutBase",E,E,0,N],[13,"RelativeUrlWithCannotBeABaseBase",E,E,0,N],[13,"SetHostOnCannotBeABaseUrl",E,E,0,N],[13,"Overflow",E,E,0,N],[3,"Url",E,"A parsed URL record.",N,N],[3,R[143],E,"Options for validating temporal claims",N,N],[12,"epsilon",E,"Allow for some leeway for clock drifts, limited to this…",1,N],[12,"now",E,"Specify a time to use in temporal validation instead of…",1,N],[3,"Empty",E,"An empty struct that derives Serialize and Deserialize.…",N,N],[3,R[175],E,"A newtype wrapper around a string to indicate it's base64…",N,N],[3,R[68],E,"A collection of `CompactPart`s that have been converted to…",N,N],[12,"parts",E,"Parts of the compact representation",2,N],[3,R[176],E,"Wrapper around `DateTime<Utc>` to allow us to do custom…",N,N],[3,R[144],E,"Registered claims defined by RFC7519#4.1",N,N],[12,R[3],E,"Token issuer. Serialized to `iss`.",3,N],[12,R[5],E,"Subject where the JWT is referring to. Serialized to `sub`",3,N],[12,R[4],E,"Audience intended for the JWT. Serialized to `aud`",3,N],[12,R[2],E,"Expiration time in seconds since Unix Epoch. Serialized to…",3,N],[12,R[1],E,"Not before time in seconds since Unix Epoch. Serialized to…",3,N],[12,R[0],E,"Issued at Time in seconds since Unix Epoch. Serialized to…",3,N],[12,"id",E,"Application specific JWT ID. Serialized to `jti`",3,N],[3,R[145],E,"Options for claims presence validation",N,N],[12,R[0],E,"Whether the `iat` or `Issued At` field is required",4,N],[12,R[1],E,"Whether the `nbf` or `Not Before` field is required",4,N],[12,R[2],E,"Whether the `exp` or `Expiry` field is required",4,N],[12,R[3],E,"Whether the `iss` or `Issuer` field is required",4,N],[12,R[4],E,"Whether the `aud` or `Audience` field is required",4,N],[12,R[5],E,"Whether the `sub` or `Subject` field is required",4,N],[12,"id",E,"Whether the `jti` or `JWT ID` field is required",4,N],[3,R[146],E,"Options for claims validation",N,N],[12,"claim_presence_options",E,"Claims marked as required will trigger a validation…",5,N],[12,"temporal_options",E,"Define how to validate temporal claims",5,N],[12,R[0],E,"Validation options for `iat` or `Issued At` claim if…",5,N],[12,R[1],E,"Validation options for `nbf` or `Not Before` claim if…",5,N],[12,R[2],E,"Validation options for `exp` or `Expiry` claim if present",5,N],[12,R[3],E,"Validation options for `iss` or `Issuer` claim if present…",5,N],[12,R[4],E,"Validation options for `aud` or `Audience` claim if…",5,N],[3,R[147],E,"A collection of claims, both registered and your custom…",N,N],[12,R[20],E,"Registered claims defined by the RFC",6,N],[12,R[56],E,"Application specific claims",6,N],[4,"Presence",E,"Defines whether a claim is required or not",N,N],[13,"Optional",E,"Claim is optional",7,N],[13,"Required",E,"Claim is required",7,N],[4,R[148],E,"Defines whether a claim is validated or not",N,N],[13,"Ignored",E,"This claim is not validated",8,N],[13,"Validate",E,"Validate this claim with type T. Refer to…",8,N],[4,R[149],E,"Represents a choice between a single value or multiple…",N,N],[13,"Single",E,"One single value",9,N],[13,"Multiple",E,"Multiple values",9,N],[4,R[150],E,"Represents a choice between a URI or an arbitrary string.…",N,N],[13,"String",E,"A generic string",10,N],[13,"Uri",E,"A parsed URI",10,N],[11,"map",E,"Map the value to another validation requirement, similar…",8,[[["f"]],[R[91]]]],[0,"errors",E,"Errors returned will be converted to one of the structs in…",N,N],[4,"Error",R[6],"All the errors we can encounter while signing/verifying…",N,N],[13,"GenericError",E,"A generic error which is described by the contained string",11,N],[13,R[10],E,"Error returned from failed token decoding",11,N],[13,R[11],E,"Error returned from failed token validation",11,N],[13,"JsonError",E,"Error during the serialization or deserialization of tokens",11,N],[13,"DecodeBase64",E,"Error during base64 encoding or decoding",11,N],[13,"Utf8",E,"Error when decoding bytes to UTF8 string",11,N],[13,"IOError",E,"Errors related to IO",11,N],[13,"UriParseError",E,"Errors related to URI parsing",11,N],[13,"KeyRejected",E,"Key was rejected by Ring",11,N],[13,"WrongKeyType",E,"Wrong key type was provided for the cryptographic operation",11,N],[12,R[7],R[8],"Expected type of key",11,N],[12,R[9],E,"Actual type of key",11,N],[13,"WrongEncryptionOptions",R[6],"Wrong variant of `EncryptionOptions` was provided for the…",11,N],[12,R[7],R[8],"Expected variant of options",11,N],[12,R[9],E,"Actual variant of options",11,N],[13,"UnspecifiedCryptographicError",R[6],"An unknown cryptographic error",11,N],[13,"UnsupportedOperation",E,"An unsupported or invalid operation",11,N],[4,R[10],E,"Errors from decoding tokens",N,N],[13,"InvalidToken",E,"Token is invalid in structure or form",12,N],[13,"PartsLengthError",E,"The number of compact parts is incorrect",12,N],[12,R[7],"biscuit::errors::DecodeError","Expected number of parts",12,N],[12,R[9],E,"Actual number of parts",12,N],[4,R[11],R[6],"Errors from validating tokens",N,N],[13,"InvalidSignature",E,"Token has an invalid signature (RFC7523 3.9)",13,N],[13,"WrongAlgorithmHeader",E,"Token provided was signed or encrypted with an unexpected…",13,N],[13,"MissingRequiredClaims",E,"A field required is missing from the token The parameter…",13,N],[13,"Expired",E,"The token's expiry has passed (exp check failled, RFC7523…",13,N],[13,"NotYetValid",E,"The token is not yet valid (nbf check failed, RFC7523 3.5)…",13,N],[13,"TooOld",E,"The token has been created too far in the past (iat check…",13,N],[13,"InvalidIssuer",E,"The token does not have or has the wrong issuer (iss check…",13,N],[13,"InvalidAudience",E,"The token does not have or has the wrong audience (aud…",13,N],[13,"KidMissing",E,"The token doesn't contains the Kid claim in the header",13,N],[13,"KeyNotFound",E,"The by the Kid specified key, wasn't found in the KeySet",13,N],[13,"UnsupportedKeyAlgorithm",E,"The algorithm of the JWK is not supported for validating…",13,N],[0,"jwa",R[19],"JSON Web Algorithms",N,N],[8,R[151],R[13],"A secure random number generator.",N,N],[10,"fill",E,"Fills `dest` with random bytes.",14,[[["self"]],[[R[12]],[R[15],[R[12]]]]]],[3,R[152],E,"The result returned from an encryption operation",N,N],[12,"nonce",E,"The initialization vector, or nonce used in the encryption",15,N],[12,R[26],E,"The encrypted payload",15,N],[12,"tag",E,"The authentication tag",15,N],[12,"additional_data",E,"Additional authenticated data that is integrity protected…",15,N],[4,R[153],E,"Options to be passed in while performing an encryption…",N,N],[13,"None",E,"No options are required. Most algorithms do not require…",16,N],[13,"AES_GCM",E,"Options for AES GCM encryption.",16,N],[12,"nonce","biscuit::jwa::EncryptionOptions","Initialization vector, or nonce for the AES GCM…",16,N],[4,R[154],R[13],"Algorithms described by RFC 7518. This enum is serialized…",N,N],[13,R[42],E,"Algorithms meant for Digital signature or MACs See RFC7518#3",17,N],[13,"KeyManagement",E,"Algorithms meant for key management. The algorithms are…",17,N],[13,"ContentEncryption",E,R[14],17,N],[4,R[155],E,"The algorithms supported for digital signature and MACs,…",N,N],[13,"None",E,"No encryption/signature is included for the JWT. During…",18,N],[13,"HS256",E,"HMAC using SHA-256",18,N],[13,"HS384",E,"HMAC using SHA-384",18,N],[13,"HS512",E,"HMAC using SHA-512",18,N],[13,"RS256",E,"RSASSA-PKCS1-v1_5 using SHA-256",18,N],[13,"RS384",E,"RSASSA-PKCS1-v1_5 using SHA-384",18,N],[13,"RS512",E,"RSASSA-PKCS1-v1_5 using SHA-512",18,N],[13,"ES256",E,"ECDSA using P-256 and SHA-256",18,N],[13,"ES384",E,"ECDSA using P-384 and SHA-384",18,N],[13,"ES512",E,"ECDSA using P-521 and SHA-512 -- This variant is…",18,N],[13,"PS256",E,"RSASSA-PSS using SHA-256 and MGF1 with SHA-256. The size…",18,N],[13,"PS384",E,"RSASSA-PSS using SHA-384 and MGF1 with SHA-384 The size of…",18,N],[13,"PS512",E,"RSASSA-PSS using SHA-512 and MGF1 with SHA-512 The size of…",18,N],[4,R[156],E,"Algorithms for key management as defined in RFC7518#4",N,N],[13,"RSA1_5",E,"RSAES-PKCS1-v1_5",19,N],[13,"RSA_OAEP",E,"RSAES OAEP using default parameters",19,N],[13,"RSA_OAEP_256",E,"RSAES OAEP using SHA-256 and MGF1 with SHA-256",19,N],[13,"A128KW",E,"AES Key Wrap using 128-bit key. Unsupported",19,N],[13,"A192KW",E,"AES Key Wrap using 192-bit key. Unsupported. This is not…",19,N],[13,"A256KW",E,"AES Key Wrap using 256-bit key. Unsupported",19,N],[13,"DirectSymmetricKey",E,"Direct use of a shared symmetric key",19,N],[13,"ECDH_ES",E,"ECDH-ES using Concat KDF",19,N],[13,"ECDH_ES_A128KW",E,"ECDH-ES using Concat KDF and \"A128KW\" wrapping",19,N],[13,"ECDH_ES_A192KW",E,"ECDH-ES using Concat KDF and \"A192KW\" wrapping",19,N],[13,"ECDH_ES_A256KW",E,"ECDH-ES using Concat KDF and \"A256KW\" wrapping",19,N],[13,"A128GCMKW",E,"Key wrapping with AES GCM using 128-bit key alg",19,N],[13,"A192GCMKW",E,"Key wrapping with AES GCM using 192-bit key alg. This is…",19,N],[13,"A256GCMKW",E,"Key wrapping with AES GCM using 256-bit key alg",19,N],[13,"PBES2_HS256_A128KW",E,"PBES2 with HMAC SHA-256 and \"A128KW\" wrapping",19,N],[13,"PBES2_HS384_A192KW",E,"PBES2 with HMAC SHA-384 and \"A192KW\" wrapping",19,N],[13,"PBES2_HS512_A256KW",E,"PBES2 with HMAC SHA-512 and \"A256KW\" wrapping",19,N],[4,R[157],E,"Describes the type of operations that the key management…",N,N],[13,"SymmetricKeyWrapping",E,"Wraps a randomly generated CEK using a symmetric…",20,N],[13,"AsymmetricKeyEncryption",E,"Encrypt a randomly generated CEK using an asymmetric…",20,N],[13,"DirectKeyAgreement",E,"A key agreement algorithm to pick a CEK",20,N],[13,"KeyAgreementWithKeyWrapping",E,"A key agreement algorithm used to pick a symmetric CEK and…",20,N],[13,"DirectEncryption",E,"A user defined symmetric shared key is the CEK",20,N],[4,R[158],E,R[14],N,N],[13,"A128CBC_HS256",E,"AES_128_CBC_HMAC_SHA_256 authenticated encryption…",21,N],[13,"A192CBC_HS384",E,"AES_192_CBC_HMAC_SHA_384 authenticated encryption…",21,N],[13,"A256CBC_HS512",E,"AES_256_CBC_HMAC_SHA_512 authenticated encryption…",21,N],[13,"A128GCM",E,"AES GCM using 128-bit key",21,N],[13,"A192GCM",E,"AES GCM using 192-bit key This is not supported by `ring`.",21,N],[13,"A256GCM",E,"AES GCM using 256-bit key",21,N],[11,R[51],E,R[52],16,[[["self"]],["str"]]],[11,"sign",E,"Take some bytes and sign it according to the algorithm and…",18,[[[R[72]]],[[R[15],["vec","error"]],["vec",["u8"]],["error"]]]],[11,"verify",E,"Verify signature based on the algorithm and secret provided.",18,[[[R[72]]],[["error"],[R[15],["error"]]]]],[11,"algorithm_type",E,"Returns the type of operations that the algorithm is…",19,[[],[R[114]]]],[11,"cek",E,"Return the Content Encryption Key (CEK) based on the key…",19,[[["jwk"],[R[17]]],[["jwk",["empty"]],["error"],[R[15],["jwk","error"]]]]],[11,"wrap_key",E,"Encrypt or wrap a Content Encryption Key with the provided…",19,[[["jwk"],[R[18]]],[["error"],[R[16]],[R[15],[R[16],"error"]]]]],[11,"unwrap_key",E,"Decrypt or unwrap a CEK with the provided algorithm",19,[[[R[16]],["jwk"],[R[17]]],[["jwk",["empty"]],["error"],[R[15],["jwk","error"]]]]],[11,"generate_key",E,"Convenience function to generate a new random key with the…",21,[[],[[R[15],["vec","error"]],["vec",["u8"]],["error"]]]],[11,"encrypt",E,"Encrypt some payload with the provided algorith",21,[[["jwk"],[R[18]]],[["error"],[R[16]],[R[15],[R[16],"error"]]]]],[11,"decrypt",E,"Decrypt some payload with the provided algorith,",21,[[[R[16]],["jwk"]],[[R[15],["vec","error"]],["vec",["u8"]],["error"]]]],[0,"jwe",R[19],"JSON Web Encryption",N,N],[3,R[58],R[23],"Registered JWE header fields. The fields are defined by…",N,N],[12,R[21],E,"Algorithm used to encrypt or determine the value of the…",22,N],[12,"enc_algorithm",E,"Content encryption algorithm used to perform authenticated…",22,N],[12,"compression_algorithm",E,R[22],22,N],[12,R[59],E,"Media type of the complete JWE. Serialized to `typ`.…",22,N],[12,R[60],E,R[61],22,N],[12,R[62],E,R[63],22,N],[12,"web_key",E,R[64],22,N],[12,"key_id",E,R[65],22,N],[12,R[31],E,R[32],22,N],[12,R[33],E,R[34],22,N],[12,R[35],E,R[36],22,N],[12,R[66],E,R[67],22,N],[3,R[159],E,"Headers specific to the Key management algorithm used.…",N,N],[12,"nonce",E,"Header for AES GCM Keywrap algorithm. The initialization…",23,N],[12,"tag",E,"Header for AES GCM Keywrap algorithm. The authentication…",23,N],[3,"Header",E,"JWE Header, consisting of the registered fields and other…",N,N],[12,R[20],E,R[55],24,N],[12,R[21],E,"Key management algorithm specific headers",24,N],[12,R[56],E,R[57],24,N],[4,R[160],E,R[22],N,N],[13,"Deflate",E,"DEFLATE algorithm defined in RFC 1951",25,N],[13,"Other",E,"Other user-defined algorithm",25,N],[4,R[68],E,"Compact representation of a JWE, or an encrypted JWT",N,N],[13,"Decrypted",E,"Decrypted form of the JWE. This variant cannot be…",26,N],[12,R[29],"biscuit::jwe::Compact",R[69],26,N],[12,R[70],E,"Payload, usually a signed/unsigned JWT",26,N],[13,"Encrypted",R[23],"Encrypted JWT. Use this form to send to your clients",26,N],[11,R[84],E,R[85],24,[[[R[86]]],["self"]]],[11,"new_decrypted",E,R[24],26,[[[R[29]],[T]],["self"]]],[11,"new_encrypted",E,R[24],26,[[["str"]],["self"]]],[11,"into_encrypted",E,"Consumes self and encrypt it. If the token is already…",26,[[["jwk"],[R[18]]],[["error"],[R[15],["error"]]]]],[11,"encrypt",E,"Encrypt an Decrypted JWE.",26,[[["jwk"],[R[18]],["self"]],[["error"],[R[15],["error"]]]]],[11,"into_decrypted",E,"Consumes self and decrypt it. If the token is already…",26,[[["jwk"],[R[25]],[R[17]]],[["error"],[R[15],["error"]]]]],[11,"decrypt",E,"Decrypt an encrypted JWE. Provide the expected algorithms…",26,[[["jwk"],[R[17]],["self"],[R[25]]],[["error"],[R[15],["error"]]]]],[11,R[26],E,"Convenience method to get a reference to the encrypted…",26,[[["self"]],[[R[27]],["error"],[R[15],[R[27],"error"]]]]],[11,"encrypted_mut",E,R[28],26,[[["self"]],[[R[15],[R[27],"error"]],[R[27]],["error"]]]],[11,R[70],E,"Convenience method to get a reference to the payload from…",26,[[["self"]],[["error"],[T],[R[15],["error"]]]]],[11,R[75],E,R[28],26,[[["self"]],[["error"],[R[15],["error"]],[T]]]],[11,R[29],E,R[30],26,[[["self"]],[[R[29]],[R[15],[R[29],"error"]],["error"]]]],[11,R[77],E,R[30],26,[[["self"]],[[R[29]],["error"],[R[15],[R[29],"error"]]]]],[11,"unwrap_decrypted",E,R[79],26,[[]]],[11,"unwrap_encrypted",E,"Consumes self, and move the encrypted Compact…",26,[[],[R[27]]]],[11,R[81],E,R[82],26,[[[R[83]],["self"]],[["error"],[R[15],["error"]]]]],[0,"jwk",R[19],"JSON Web Key",N,N],[3,R[161],R[105],R[40],N,N],[12,"public_key_use",E,"The intended use of the public key. Should not be…",27,N],[12,"key_operations",E,"The \"key_ops\" (key operations) parameter identifies the…",27,N],[12,R[41],E,"The algorithm intended for use with the key",27,N],[12,"key_id",E,"The case sensitive Key ID for the key",27,N],[12,R[31],E,R[32],27,N],[12,R[33],E,R[34],27,N],[12,R[35],E,R[36],27,N],[3,R[162],E,"Parameters for an Elliptic Curve Key",N,N],[12,R[37],E,R[48],28,N],[12,"curve",E,R[39],28,N],[12,"x",E,"The \"x\" (x coordinate) parameter contains the x coordinate…",28,N],[12,"y",E,"The \"y\" (y coordinate) parameter contains the y coordinate…",28,N],[12,"d",E,"The \"d\" (ECC private key) parameter contains the Elliptic…",28,N],[3,R[163],E,"Parameters for a RSA Key",N,N],[12,R[37],E,"Key type value for a RSA Key",29,N],[12,"n",E,"The \"n\" (modulus) parameter contains the modulus value for…",29,N],[12,"e",E,"The \"e\" (exponent) parameter contains the exponent value…",29,N],[12,"d",E,"The \"d\" (private exponent) parameter contains the private…",29,N],[12,"p",E,"The \"p\" (first prime factor) parameter contains the first…",29,N],[12,"q",E,"The \"q\" (second prime factor) parameter contains the…",29,N],[12,"dp",E,"The \"dp\" (first factor CRT exponent) parameter contains…",29,N],[12,"dq",E,"The \"dq\" (second factor CRT exponent) parameter contains…",29,N],[12,"qi",E,"The \"qi\" (first CRT coefficient) parameter contains the…",29,N],[12,"other_primes_info",E,R[38],29,N],[3,R[164],E,R[38],N,N],[12,"r",E,"The \"r\" (prime factor) parameter represents the value of a…",30,N],[12,"d",E,"The \"d\" (factor CRT exponent) parameter represents the CRT…",30,N],[12,T,E,"The \"t\" (factor CRT coefficient) parameter member…",30,N],[3,R[165],E,"Parameters for an Octet Key",N,N],[12,R[37],E,"Key type value for an Octet Key",31,N],[12,"value",E,"The octet key value",31,N],[3,R[166],E,"Parameters for an Octet Key Pair",N,N],[12,R[37],E,"Key type value for an Octet Key Pair",32,N],[12,"curve",E,R[39],32,N],[12,"x",E,"The \"x\" parameter contains the base64 encoded public key",32,N],[12,"d",E,"The \"d\" parameter contains the base64 encoded private key",32,N],[3,"JWK",E,"A JSON object that represents a cryptographic key. The…",N,N],[12,"common",E,R[40],33,N],[12,R[41],E,"Key algorithm specific parameters",33,N],[12,"additional",E,"Additional JWK parameters",33,N],[3,"JWKSet",E,"A JSON object that represents a set of JWKs.",N,N],[12,"keys",E,"Containted JWKs",34,N],[4,"KeyType",E,"Type of Key as specified in RFC 7518.",N,N],[13,R[43],E,R[44],35,N],[13,"RSA",E,"RSA key",35,N],[13,"Octet",E,R[45],35,N],[13,R[46],E,R[47],35,N],[4,R[167],E,"The intended usage of the public `KeyType`. This enum is…",N,N],[13,R[42],E,"Indicates a public key is meant for signature verification",36,N],[13,"Encryption",E,"Indicates a public key is meant for encryption",36,N],[13,"Other",E,"Other usage",36,N],[4,R[168],E,"Operations that the key is intended to be used for. This…",N,N],[13,"Sign",E,"Computer digitial signature or MAC",37,N],[13,"Verify",E,"Verify digital signature or MAC",37,N],[13,"Encrypt",E,"Encrypt content",37,N],[13,"Decrypt",E,"Decrypt content and validate decryption, if applicable",37,N],[13,"WrapKey",E,"Encrypt key",37,N],[13,"UnwrapKey",E,"Decrypt key and validate decryption, if applicable",37,N],[13,"DeriveKey",E,"Derive key",37,N],[13,"DeriveBits",E,"Derive bits not to be used as a key",37,N],[13,"Other",E,"Other operation",37,N],[4,R[169],E,"Algorithm specific parameters",N,N],[13,R[43],E,R[44],38,N],[13,"RSA",E,"RSA key",38,N],[13,"OctetKey",E,R[45],38,N],[13,R[46],E,R[47],38,N],[4,R[170],E,"Key type value for an Elliptic Curve Key. This single…",N,N],[13,"EC",E,R[48],39,N],[4,R[171],E,"Key type value for an RSA Key. This single value enum is a…",N,N],[13,"RSA",E,"Key type value for an RSA Key.",40,N],[4,R[172],E,"Key type value for an Octet symmetric key. This single…",N,N],[13,"Octet",E,"Key type value for an Octet symmetric key.",41,N],[4,R[173],E,"Key type value for an Octet Key Pair. This single value…",N,N],[13,R[46],E,"Key type value for an Octet Key Pair.",42,N],[4,R[43],E,"Type of cryptographic curve used by a key. This is defined…",N,N],[13,"P256",E,"P-256 curve",43,N],[13,"P384",E,"P-384 curve",43,N],[13,"P521",E,"P-521 curve -- unsupported by `ring`.",43,N],[13,R[49],E,R[49],43,N],[13,R[50],E,R[50],43,N],[11,R[51],E,R[52],35,[[],["str"]]],[11,R[37],E,"Returns the type of key represented by this set of…",38,[[["self"]],["keytype"]]],[11,R[53],E,R[54],38,[[["self"]],[[R[15],["error"]],["error"]]]],[11,"jws_public_key_secret",E,"Construct a `jws::Secret` RSA public key for signature…",29,[[["self"]],[R[72]]]],[11,"new_octet_key",E,"Convenience to create a new bare-bones Octet key",33,[[[T]],["self"]]],[11,"clone_without_additional",E,"Convenience function to strip out the additional fields",33,[[["self"]],[["jwk",["empty"]],["empty"]]]],[11,R[37],E,"Returns the type of key represented by this key",33,[[["self"]],["keytype"]]],[11,R[53],E,R[54],33,[[["self"]],[[R[15],["error"]],["error"]]]],[11,"find",E,"Find the key in the set that matches the given key id, if…",34,[[["str"],["self"]],[["jwk"],["option",["jwk"]]]]],[0,"jws",R[19],"JSON Web Signatures, including JWT signing and headers",N,N],[3,"Header",R[71],"JWS Header, consisting of the registered fields and other…",N,N],[12,R[20],E,R[55],44,N],[12,R[56],E,R[57],44,N],[3,R[58],E,"Registered JWS header fields. The alg defaults to HS256…",N,N],[12,R[41],E,"Algorithms, as defined in RFC 7518, used to sign or…",45,N],[12,R[59],E,"Media type of the complete JWS. Serialized to `typ`.…",45,N],[12,R[60],E,R[61],45,N],[12,R[62],E,R[63],45,N],[12,"web_key",E,R[64],45,N],[12,"key_id",E,R[65],45,N],[12,R[31],E,R[32],45,N],[12,R[33],E,R[34],45,N],[12,R[35],E,R[36],45,N],[12,R[66],E,R[67],45,N],[4,R[68],E,"Compact representation of a JWS",N,N],[13,"Decoded",E,"Decoded form of the JWS. This variant cannot be serialized…",46,N],[12,R[29],"biscuit::jws::Compact",R[69],46,N],[12,R[70],E,"Payload, usually a claims set",46,N],[13,"Encoded",R[71],"Encoded and (optionally) signed JWT. Use this form to send…",46,N],[4,"Secret",E,"The secrets used to sign and/or encrypt tokens",N,N],[13,"None",E,"Used with the `None` algorithm variant.",47,N],[13,"Bytes",E,"Bytes used for HMAC secret. Can be constructed from a…",47,N],[13,"RsaKeyPair",E,"An RSA Key pair constructed from a DER-encoded private key",47,N],[13,"EcdsaKeyPair",E,"An ECDSA Key pair constructed from a PKCS8 DER encoded…",47,N],[13,"PublicKey",E,"Bytes of a DER encoded RSA Public Key",47,N],[13,"RSAModulusExponent",E,"Use the modulus (`n`) and exponent (`e`) of an RSA key…",47,N],[12,"n","biscuit::jws::Secret","RSA modulus",47,N],[12,"e",E,"RSA exponent",47,N],[11,"new_decoded",R[71],"New decoded JWT",46,[[[T],[R[29]]],["self"]]],[11,"new_encoded",E,"New encoded JWT",46,[[["str"]],["self"]]],[11,"into_encoded",E,"Consumes self and convert into encoded form. If the token…",46,[[[R[72]]],[["error"],[R[15],["error"]]]]],[11,"encode",E,"Encode the JWT passed and sign the payload using the…",46,[[["self"],[R[72]]],[["error"],[R[15],["error"]]]]],[11,"into_decoded",E,"Consumes self and convert into decoded form, verifying the…",46,[[[R[72]],[R[73]]],[["error"],[R[15],["error"]]]]],[11,"decode",E,R[74],46,[[[R[73]],["self"],[R[72]]],[["error"],[R[15],["error"]]]]],[11,"decode_with_jwks",E,R[74],46,[[["jwkset"],["self"]],[["error"],[R[15],["error"]]]]],[11,"encoded",E,"Convenience method to get a reference to the encoded…",46,[[["self"]],[[R[27]],["error"],[R[15],[R[27],"error"]]]]],[11,"encoded_mut",E,R[28],46,[[["self"]],[[R[15],[R[27],"error"]],[R[27]],["error"]]]],[11,R[70],E,R[76],46,[[["self"]],[["error"],[T],[R[15],["error"]]]]],[11,R[75],E,R[76],46,[[["self"]],[["error"],[R[15],["error"]],[T]]]],[11,R[29],E,R[78],46,[[["self"]],[[R[29]],["error"],[R[15],[R[29],"error"]]]]],[11,R[77],E,R[78],46,[[["self"]],[[R[29]],[R[15],[R[29],"error"]],["error"]]]],[11,"unwrap_decoded",E,R[79],46,[[]]],[11,"unwrap_encoded",E,"Consumes self, and move the encoded Compact out and return…",46,[[],[R[27]]]],[11,"unverified_header",E,R[80],46,[[["self"]],[["error"],[R[15],[R[29],"error"]],[R[29]]]]],[11,"unverified_payload",E,R[80],46,[[["self"]],[[R[15],["error"]],["error"]]]],[11,"signature",E,"Get a copy of the signature",46,[[["self"]],[[R[15],["vec","error"]],["vec",["u8"]],["error"]]]],[11,R[81],E,R[82],46,[[[R[83]],["self"]],[["error"],[R[15],["error"]]]]],[11,"bytes_from_str",E,"Convenience function to create a secret bytes array from a…",47,[[["str"]],["self"]]],[11,"rsa_keypair_from_file",E,"Convenience function to get the RSA Keypair from a DER…",47,[[["str"]],[["error"],[R[15],["error"]]]]],[11,"ecdsa_keypair_from_file",E,"Convenience function to get the ECDSA Keypair from a…",47,[[["str"],[R[73]]],[["error"],[R[15],["error"]]]]],[11,"public_key_from_file",E,"Convenience function to create a Public key from a DER…",47,[[["str"]],[["error"],[R[15],["error"]]]]],[11,R[84],E,R[85],44,[[[R[86]]],["self"]]],[6,"JWT",R[19],"A convenience type alias of the common \"JWT\" which is a…",N,N],[6,"JWE",E,"A convenience type alias of a \"JWE\" which is a compact JWE…",N,N],[8,R[174],E,"A \"part\" of the compact representation of JWT/JWS/JWE.…",N,N],[10,R[102],E,"Convert this part into bytes",48,[[["self"]],[[R[15],["vec","error"]],["vec",["u8"]],["error"]]]],[10,R[101],E,R[110],48,[[],[["error"],[R[15],["error"]]]]],[11,R[112],E,"Base64 decode into Self",48,[[["b"]],[["error"],[R[15],["error"]]]]],[11,R[111],E,"Serialize `Self` to some form and then base64URL Encode",48,[[["self"]],[["error"],[R[15],[R[87],"error"]],[R[87]]]]],[8,"CompactJson",E,"A marker trait that indicates that the object is to be…",N,N],[11,"unwrap",E,"Unwrap the embedded string, consuming self in the process",49,[[],["string"]]],[11,"str",E,"\"Borrow\" the string",49,[[["self"]],["str"]]],[11,"new",E,"Create an empty struct",2,[[],["self"]]],[11,"with_capacity",E,"Create an empty struct with some expected capacity",2,[[["usize"]],["self"]]],[11,"push",E,"Push a `CompactPart` to the end",2,[[[R[88]],["self"]],[["error"],[R[15],["error"]]]]],[11,"len",E,"Returns the number of parts",2,[[["self"]],["usize"]]],[11,"is_empty",E,"Returns whether there are no parts",2,[[["self"]],["bool"]]],[11,"encode",E,"Encodes the various parts into Base64 URL encoding and…",2,[[["self"]],["string"]]],[11,"decode",E,"Convenience function to split an encoded compact…",2,[[["str"]],["self"]]],[11,"part",E,"Convenience function to retrieve a part at a certain index…",2,[[["self"],["usize"]],[[R[15],["error"]],[R[88]],["error"]]]],[11,"contains",E,"Checks whether this enum, regardless of single or multiple…",9,[[["self"],["q"]],["bool"]]],[11,"iter",E,"Yields an iterator for the single value or the list",9,[[["self"]],[["box",[R[89]]],[R[89]]]]],[11,"strict",E,"Returns a ClaimPresenceOptions where every claim is…",4,[[],["self"]]],[11,"validate_claim_presence",E,"Validates that the token contains the claims defined as…",3,[[[R[116]],["self"]],[[R[90]],[R[15],[R[90]]]]]],[11,"validate_exp",E,"Validates that if the token has an `exp` claim, it has not…",3,[[[R[91],[R[92]]],[R[92]],["self"]],[[R[90]],[R[15],[R[90]]]]]],[11,"validate_nbf",E,"Validates that if the token has an `nbf` claim, it has…",3,[[[R[91],[R[92]]],[R[92]],["self"]],[[R[90]],[R[15],[R[90]]]]]],[11,"validate_iat",E,"Validates that if the token has an `iat` claim, it is not…",3,[[[R[91]],["self"]],[[R[90]],[R[15],[R[90]]]]]],[11,"validate_aud",E,"Validates that if the token has an `aud` claim, it…",3,[[[R[91],[R[93]]],["self"],[R[93]]],[[R[90]],[R[15],[R[90]]]]]],[11,"validate_iss",E,"Validates that if the token has an `iss` claim, it matches…",3,[[[R[91],[R[93]]],["self"],[R[93]]],[[R[90]],[R[15],[R[90]]]]]],[11,R[81],E,"Performs full validation of the token according to the…",3,[[[R[83]],["self"]],[[R[90]],[R[15],[R[90]]]]]],[11,"into",E,E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[94],E,E,0,[[["self"]],[T]]],[11,R[95],E,E,0,[[["self"],[T]]]],[11,R[96],E,E,0,[[["self"]],["string"]]],[11,R[97],E,E,0,[[[U]],[R[15]]]],[11,R[98],E,E,0,[[],[R[15]]]],[11,"borrow",E,E,0,[[["self"]],[T]]],[11,R[99],E,E,0,[[["self"]],[T]]],[11,R[104],E,E,0,[[["self"]],["typeid"]]],[11,R[100],E,E,0,[[["k"],["self"]],["bool"]]],[11,"into",E,E,50,[[],[U]]],[11,"from",E,E,50,[[[T]],[T]]],[11,R[94],E,E,50,[[["self"]],[T]]],[11,R[95],E,E,50,[[["self"],[T]]]],[11,R[96],E,E,50,[[["self"]],["string"]]],[11,R[97],E,E,50,[[[U]],[R[15]]]],[11,R[98],E,E,50,[[],[R[15]]]],[11,"borrow",E,E,50,[[["self"]],[T]]],[11,R[99],E,E,50,[[["self"]],[T]]],[11,R[104],E,E,50,[[["self"]],["typeid"]]],[11,R[100],E,E,50,[[["k"],["self"]],["bool"]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[94],E,E,1,[[["self"]],[T]]],[11,R[95],E,E,1,[[["self"],[T]]]],[11,R[97],E,E,1,[[[U]],[R[15]]]],[11,R[98],E,E,1,[[],[R[15]]]],[11,"borrow",E,E,1,[[["self"]],[T]]],[11,R[99],E,E,1,[[["self"]],[T]]],[11,R[104],E,E,1,[[["self"]],["typeid"]]],[11,R[100],E,E,1,[[["k"],["self"]],["bool"]]],[11,R[102],E,R[103],51,[[["self"]],[["vec",["u8"]],["error"],[R[15],["vec","error"]]]]],[11,R[101],E,E,51,[[],[[R[15],["error"]],["error"]]]],[11,"into",E,E,51,[[],[U]]],[11,"from",E,E,51,[[[T]],[T]]],[11,R[94],E,E,51,[[["self"]],[T]]],[11,R[95],E,E,51,[[["self"],[T]]]],[11,R[97],E,E,51,[[[U]],[R[15]]]],[11,R[98],E,E,51,[[],[R[15]]]],[11,"borrow",E,E,51,[[["self"]],[T]]],[11,R[99],E,E,51,[[["self"]],[T]]],[11,R[104],E,E,51,[[["self"]],["typeid"]]],[11,R[100],E,E,51,[[["k"],["self"]],["bool"]]],[11,R[102],E,R[103],49,[[["self"]],[["vec",["u8"]],["error"],[R[15],["vec","error"]]]]],[11,R[101],E,E,49,[[],[[R[15],["error"]],["error"]]]],[11,"into",E,E,49,[[],[U]]],[11,"from",E,E,49,[[[T]],[T]]],[11,R[94],E,E,49,[[["self"]],[T]]],[11,R[95],E,E,49,[[["self"],[T]]]],[11,R[97],E,E,49,[[[U]],[R[15]]]],[11,R[98],E,E,49,[[],[R[15]]]],[11,"borrow",E,E,49,[[["self"]],[T]]],[11,R[99],E,E,49,[[["self"]],[T]]],[11,R[104],E,E,49,[[["self"]],["typeid"]]],[11,R[100],E,E,49,[[["k"],["self"]],["bool"]]],[11,"into",E,E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[94],E,E,2,[[["self"]],[T]]],[11,R[95],E,E,2,[[["self"],[T]]]],[11,R[96],E,E,2,[[["self"]],["string"]]],[11,R[97],E,E,2,[[[U]],[R[15]]]],[11,R[98],E,E,2,[[],[R[15]]]],[11,"borrow",E,E,2,[[["self"]],[T]]],[11,R[99],E,E,2,[[["self"]],[T]]],[11,R[104],E,E,2,[[["self"]],["typeid"]]],[11,R[100],E,E,2,[[["k"],["self"]],["bool"]]],[11,"into",E,E,52,[[],[U]]],[11,"from",E,E,52,[[[T]],[T]]],[11,R[94],E,E,52,[[["self"]],[T]]],[11,R[95],E,E,52,[[["self"],[T]]]],[11,R[97],E,E,52,[[[U]],[R[15]]]],[11,R[98],E,E,52,[[],[R[15]]]],[11,"borrow",E,E,52,[[["self"]],[T]]],[11,R[99],E,E,52,[[["self"]],[T]]],[11,R[104],E,E,52,[[["self"]],["typeid"]]],[11,R[100],E,E,52,[[["k"],["self"]],["bool"]]],[11,"into",E,E,3,[[],[U]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[94],E,E,3,[[["self"]],[T]]],[11,R[95],E,E,3,[[["self"],[T]]]],[11,R[97],E,E,3,[[[U]],[R[15]]]],[11,R[98],E,E,3,[[],[R[15]]]],[11,"borrow",E,E,3,[[["self"]],[T]]],[11,R[99],E,E,3,[[["self"]],[T]]],[11,R[104],E,E,3,[[["self"]],["typeid"]]],[11,R[100],E,E,3,[[["k"],["self"]],["bool"]]],[11,"into",E,E,4,[[],[U]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[94],E,E,4,[[["self"]],[T]]],[11,R[95],E,E,4,[[["self"],[T]]]],[11,R[97],E,E,4,[[[U]],[R[15]]]],[11,R[98],E,E,4,[[],[R[15]]]],[11,"borrow",E,E,4,[[["self"]],[T]]],[11,R[99],E,E,4,[[["self"]],[T]]],[11,R[104],E,E,4,[[["self"]],["typeid"]]],[11,R[100],E,E,4,[[["k"],["self"]],["bool"]]],[11,"into",E,E,5,[[],[U]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[94],E,E,5,[[["self"]],[T]]],[11,R[95],E,E,5,[[["self"],[T]]]],[11,R[97],E,E,5,[[[U]],[R[15]]]],[11,R[98],E,E,5,[[],[R[15]]]],[11,"borrow",E,E,5,[[["self"]],[T]]],[11,R[99],E,E,5,[[["self"]],[T]]],[11,R[104],E,E,5,[[["self"]],["typeid"]]],[11,R[100],E,E,5,[[["k"],["self"]],["bool"]]],[11,R[102],E,R[103],6,[[["self"]],[["vec",["u8"]],["error"],[R[15],["vec","error"]]]]],[11,R[101],E,E,6,[[],[[R[15],["error"]],["error"]]]],[11,"into",E,E,6,[[],[U]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[94],E,E,6,[[["self"]],[T]]],[11,R[95],E,E,6,[[["self"],[T]]]],[11,R[97],E,E,6,[[[U]],[R[15]]]],[11,R[98],E,E,6,[[],[R[15]]]],[11,"borrow",E,E,6,[[["self"]],[T]]],[11,R[99],E,E,6,[[["self"]],[T]]],[11,R[104],E,E,6,[[["self"]],["typeid"]]],[11,R[100],E,E,6,[[["k"],["self"]],["bool"]]],[11,"into",E,E,7,[[],[U]]],[11,"from",E,E,7,[[[T]],[T]]],[11,R[94],E,E,7,[[["self"]],[T]]],[11,R[95],E,E,7,[[["self"],[T]]]],[11,R[97],E,E,7,[[[U]],[R[15]]]],[11,R[98],E,E,7,[[],[R[15]]]],[11,"borrow",E,E,7,[[["self"]],[T]]],[11,R[99],E,E,7,[[["self"]],[T]]],[11,R[104],E,E,7,[[["self"]],["typeid"]]],[11,R[100],E,E,7,[[["k"],["self"]],["bool"]]],[11,"into",E,E,8,[[],[U]]],[11,"from",E,E,8,[[[T]],[T]]],[11,R[94],E,E,8,[[["self"]],[T]]],[11,R[95],E,E,8,[[["self"],[T]]]],[11,R[97],E,E,8,[[[U]],[R[15]]]],[11,R[98],E,E,8,[[],[R[15]]]],[11,"borrow",E,E,8,[[["self"]],[T]]],[11,R[99],E,E,8,[[["self"]],[T]]],[11,R[104],E,E,8,[[["self"]],["typeid"]]],[11,R[100],E,E,8,[[["k"],["self"]],["bool"]]],[11,"into",E,E,9,[[],[U]]],[11,"from",E,E,9,[[[T]],[T]]],[11,R[94],E,E,9,[[["self"]],[T]]],[11,R[95],E,E,9,[[["self"],[T]]]],[11,R[97],E,E,9,[[[U]],[R[15]]]],[11,R[98],E,E,9,[[],[R[15]]]],[11,"borrow",E,E,9,[[["self"]],[T]]],[11,R[99],E,E,9,[[["self"]],[T]]],[11,R[104],E,E,9,[[["self"]],["typeid"]]],[11,R[100],E,E,9,[[["k"],["self"]],["bool"]]],[11,"into",E,E,10,[[],[U]]],[11,"from",E,E,10,[[[T]],[T]]],[11,R[94],E,E,10,[[["self"]],[T]]],[11,R[95],E,E,10,[[["self"],[T]]]],[11,R[96],E,E,10,[[["self"]],["string"]]],[11,R[97],E,E,10,[[[U]],[R[15]]]],[11,R[98],E,E,10,[[],[R[15]]]],[11,"borrow",E,E,10,[[["self"]],[T]]],[11,R[99],E,E,10,[[["self"]],[T]]],[11,R[104],E,E,10,[[["self"]],["typeid"]]],[11,R[100],E,E,10,[[["k"],["self"]],["bool"]]],[11,"into",R[6],E,11,[[],[U]]],[11,"from",E,E,11,[[[T]],[T]]],[11,R[96],E,E,11,[[["self"]],["string"]]],[11,R[97],E,E,11,[[[U]],[R[15]]]],[11,R[98],E,E,11,[[],[R[15]]]],[11,"borrow",E,E,11,[[["self"]],[T]]],[11,R[99],E,E,11,[[["self"]],[T]]],[11,R[104],E,E,11,[[["self"]],["typeid"]]],[11,"into",E,E,12,[[],[U]]],[11,"from",E,E,12,[[[T]],[T]]],[11,R[96],E,E,12,[[["self"]],["string"]]],[11,R[97],E,E,12,[[[U]],[R[15]]]],[11,R[98],E,E,12,[[],[R[15]]]],[11,"borrow",E,E,12,[[["self"]],[T]]],[11,R[99],E,E,12,[[["self"]],[T]]],[11,R[104],E,E,12,[[["self"]],["typeid"]]],[11,"into",E,E,13,[[],[U]]],[11,"from",E,E,13,[[[T]],[T]]],[11,R[94],E,E,13,[[["self"]],[T]]],[11,R[95],E,E,13,[[["self"],[T]]]],[11,R[96],E,E,13,[[["self"]],["string"]]],[11,R[97],E,E,13,[[[U]],[R[15]]]],[11,R[98],E,E,13,[[],[R[15]]]],[11,"borrow",E,E,13,[[["self"]],[T]]],[11,R[99],E,E,13,[[["self"]],[T]]],[11,R[104],E,E,13,[[["self"]],["typeid"]]],[11,R[100],E,E,13,[[["k"],["self"]],["bool"]]],[11,"into",R[13],E,15,[[],[U]]],[11,"from",E,E,15,[[[T]],[T]]],[11,R[94],E,E,15,[[["self"]],[T]]],[11,R[95],E,E,15,[[["self"],[T]]]],[11,R[97],E,E,15,[[[U]],[R[15]]]],[11,R[98],E,E,15,[[],[R[15]]]],[11,"borrow",E,E,15,[[["self"]],[T]]],[11,R[99],E,E,15,[[["self"]],[T]]],[11,R[104],E,E,15,[[["self"]],["typeid"]]],[11,R[100],E,E,15,[[["k"],["self"]],["bool"]]],[11,"into",E,E,16,[[],[U]]],[11,"from",E,E,16,[[[T]],[T]]],[11,R[94],E,E,16,[[["self"]],[T]]],[11,R[95],E,E,16,[[["self"],[T]]]],[11,R[96],E,E,16,[[["self"]],["string"]]],[11,R[97],E,E,16,[[[U]],[R[15]]]],[11,R[98],E,E,16,[[],[R[15]]]],[11,"borrow",E,E,16,[[["self"]],[T]]],[11,R[99],E,E,16,[[["self"]],[T]]],[11,R[104],E,E,16,[[["self"]],["typeid"]]],[11,R[100],E,E,16,[[["k"],["self"]],["bool"]]],[11,"into",E,E,17,[[],[U]]],[11,"from",E,E,17,[[[T]],[T]]],[11,R[94],E,E,17,[[["self"]],[T]]],[11,R[95],E,E,17,[[["self"],[T]]]],[11,R[97],E,E,17,[[[U]],[R[15]]]],[11,R[98],E,E,17,[[],[R[15]]]],[11,"borrow",E,E,17,[[["self"]],[T]]],[11,R[99],E,E,17,[[["self"]],[T]]],[11,R[104],E,E,17,[[["self"]],["typeid"]]],[11,R[100],E,E,17,[[["k"],["self"]],["bool"]]],[11,"into",E,E,18,[[],[U]]],[11,"from",E,E,18,[[[T]],[T]]],[11,R[94],E,E,18,[[["self"]],[T]]],[11,R[95],E,E,18,[[["self"],[T]]]],[11,R[97],E,E,18,[[[U]],[R[15]]]],[11,R[98],E,E,18,[[],[R[15]]]],[11,"borrow",E,E,18,[[["self"]],[T]]],[11,R[99],E,E,18,[[["self"]],[T]]],[11,R[104],E,E,18,[[["self"]],["typeid"]]],[11,R[100],E,E,18,[[["k"],["self"]],["bool"]]],[11,"into",E,E,19,[[],[U]]],[11,"from",E,E,19,[[[T]],[T]]],[11,R[94],E,E,19,[[["self"]],[T]]],[11,R[95],E,E,19,[[["self"],[T]]]],[11,R[97],E,E,19,[[[U]],[R[15]]]],[11,R[98],E,E,19,[[],[R[15]]]],[11,"borrow",E,E,19,[[["self"]],[T]]],[11,R[99],E,E,19,[[["self"]],[T]]],[11,R[104],E,E,19,[[["self"]],["typeid"]]],[11,R[100],E,E,19,[[["k"],["self"]],["bool"]]],[11,"into",E,E,20,[[],[U]]],[11,"from",E,E,20,[[[T]],[T]]],[11,R[94],E,E,20,[[["self"]],[T]]],[11,R[95],E,E,20,[[["self"],[T]]]],[11,R[97],E,E,20,[[[U]],[R[15]]]],[11,R[98],E,E,20,[[],[R[15]]]],[11,"borrow",E,E,20,[[["self"]],[T]]],[11,R[99],E,E,20,[[["self"]],[T]]],[11,R[104],E,E,20,[[["self"]],["typeid"]]],[11,R[100],E,E,20,[[["k"],["self"]],["bool"]]],[11,"into",E,E,21,[[],[U]]],[11,"from",E,E,21,[[[T]],[T]]],[11,R[94],E,E,21,[[["self"]],[T]]],[11,R[95],E,E,21,[[["self"],[T]]]],[11,R[97],E,E,21,[[[U]],[R[15]]]],[11,R[98],E,E,21,[[],[R[15]]]],[11,"borrow",E,E,21,[[["self"]],[T]]],[11,R[99],E,E,21,[[["self"]],[T]]],[11,R[104],E,E,21,[[["self"]],["typeid"]]],[11,R[100],E,E,21,[[["k"],["self"]],["bool"]]],[11,"into",R[23],E,22,[[],[U]]],[11,"from",E,E,22,[[[T]],[T]]],[11,R[94],E,E,22,[[["self"]],[T]]],[11,R[95],E,E,22,[[["self"],[T]]]],[11,R[97],E,E,22,[[[U]],[R[15]]]],[11,R[98],E,E,22,[[],[R[15]]]],[11,"borrow",E,E,22,[[["self"]],[T]]],[11,R[99],E,E,22,[[["self"]],[T]]],[11,R[104],E,E,22,[[["self"]],["typeid"]]],[11,R[100],E,E,22,[[["k"],["self"]],["bool"]]],[11,"into",E,E,23,[[],[U]]],[11,"from",E,E,23,[[[T]],[T]]],[11,R[94],E,E,23,[[["self"]],[T]]],[11,R[95],E,E,23,[[["self"],[T]]]],[11,R[97],E,E,23,[[[U]],[R[15]]]],[11,R[98],E,E,23,[[],[R[15]]]],[11,"borrow",E,E,23,[[["self"]],[T]]],[11,R[99],E,E,23,[[["self"]],[T]]],[11,R[104],E,E,23,[[["self"]],["typeid"]]],[11,R[100],E,E,23,[[["k"],["self"]],["bool"]]],[11,R[102],E,R[103],24,[[["self"]],[["vec",["u8"]],["error"],[R[15],["vec","error"]]]]],[11,R[101],E,E,24,[[],[[R[15],["error"]],["error"]]]],[11,"into",E,E,24,[[],[U]]],[11,"from",E,E,24,[[[T]],[T]]],[11,R[94],E,E,24,[[["self"]],[T]]],[11,R[95],E,E,24,[[["self"],[T]]]],[11,R[97],E,E,24,[[[U]],[R[15]]]],[11,R[98],E,E,24,[[],[R[15]]]],[11,"borrow",E,E,24,[[["self"]],[T]]],[11,R[99],E,E,24,[[["self"]],[T]]],[11,R[104],E,E,24,[[["self"]],["typeid"]]],[11,R[100],E,E,24,[[["k"],["self"]],["bool"]]],[11,"into",E,E,25,[[],[U]]],[11,"from",E,E,25,[[[T]],[T]]],[11,R[94],E,E,25,[[["self"]],[T]]],[11,R[95],E,E,25,[[["self"],[T]]]],[11,R[97],E,E,25,[[[U]],[R[15]]]],[11,R[98],E,E,25,[[],[R[15]]]],[11,"borrow",E,E,25,[[["self"]],[T]]],[11,R[99],E,E,25,[[["self"]],[T]]],[11,R[104],E,E,25,[[["self"]],["typeid"]]],[11,R[100],E,E,25,[[["k"],["self"]],["bool"]]],[11,"into",E,E,26,[[],[U]]],[11,"from",E,E,26,[[[T]],[T]]],[11,R[94],E,E,26,[[["self"]],[T]]],[11,R[95],E,E,26,[[["self"],[T]]]],[11,R[97],E,E,26,[[[U]],[R[15]]]],[11,R[98],E,E,26,[[],[R[15]]]],[11,"borrow",E,E,26,[[["self"]],[T]]],[11,R[99],E,E,26,[[["self"]],[T]]],[11,R[104],E,E,26,[[["self"]],["typeid"]]],[11,R[100],E,E,26,[[["k"],["self"]],["bool"]]],[11,"into",R[105],E,27,[[],[U]]],[11,"from",E,E,27,[[[T]],[T]]],[11,R[94],E,E,27,[[["self"]],[T]]],[11,R[95],E,E,27,[[["self"],[T]]]],[11,R[97],E,E,27,[[[U]],[R[15]]]],[11,R[98],E,E,27,[[],[R[15]]]],[11,"borrow",E,E,27,[[["self"]],[T]]],[11,R[99],E,E,27,[[["self"]],[T]]],[11,R[104],E,E,27,[[["self"]],["typeid"]]],[11,R[100],E,E,27,[[["k"],["self"]],["bool"]]],[11,"into",E,E,28,[[],[U]]],[11,"from",E,E,28,[[[T]],[T]]],[11,R[94],E,E,28,[[["self"]],[T]]],[11,R[95],E,E,28,[[["self"],[T]]]],[11,R[97],E,E,28,[[[U]],[R[15]]]],[11,R[98],E,E,28,[[],[R[15]]]],[11,"borrow",E,E,28,[[["self"]],[T]]],[11,R[99],E,E,28,[[["self"]],[T]]],[11,R[104],E,E,28,[[["self"]],["typeid"]]],[11,R[100],E,E,28,[[["k"],["self"]],["bool"]]],[11,"into",E,E,29,[[],[U]]],[11,"from",E,E,29,[[[T]],[T]]],[11,R[94],E,E,29,[[["self"]],[T]]],[11,R[95],E,E,29,[[["self"],[T]]]],[11,R[97],E,E,29,[[[U]],[R[15]]]],[11,R[98],E,E,29,[[],[R[15]]]],[11,"borrow",E,E,29,[[["self"]],[T]]],[11,R[99],E,E,29,[[["self"]],[T]]],[11,R[104],E,E,29,[[["self"]],["typeid"]]],[11,R[100],E,E,29,[[["k"],["self"]],["bool"]]],[11,"into",E,E,30,[[],[U]]],[11,"from",E,E,30,[[[T]],[T]]],[11,R[94],E,E,30,[[["self"]],[T]]],[11,R[95],E,E,30,[[["self"],[T]]]],[11,R[97],E,E,30,[[[U]],[R[15]]]],[11,R[98],E,E,30,[[],[R[15]]]],[11,"borrow",E,E,30,[[["self"]],[T]]],[11,R[99],E,E,30,[[["self"]],[T]]],[11,R[104],E,E,30,[[["self"]],["typeid"]]],[11,R[100],E,E,30,[[["k"],["self"]],["bool"]]],[11,"into",E,E,31,[[],[U]]],[11,"from",E,E,31,[[[T]],[T]]],[11,R[94],E,E,31,[[["self"]],[T]]],[11,R[95],E,E,31,[[["self"],[T]]]],[11,R[97],E,E,31,[[[U]],[R[15]]]],[11,R[98],E,E,31,[[],[R[15]]]],[11,"borrow",E,E,31,[[["self"]],[T]]],[11,R[99],E,E,31,[[["self"]],[T]]],[11,R[104],E,E,31,[[["self"]],["typeid"]]],[11,R[100],E,E,31,[[["k"],["self"]],["bool"]]],[11,"into",E,E,32,[[],[U]]],[11,"from",E,E,32,[[[T]],[T]]],[11,R[94],E,E,32,[[["self"]],[T]]],[11,R[95],E,E,32,[[["self"],[T]]]],[11,R[97],E,E,32,[[[U]],[R[15]]]],[11,R[98],E,E,32,[[],[R[15]]]],[11,"borrow",E,E,32,[[["self"]],[T]]],[11,R[99],E,E,32,[[["self"]],[T]]],[11,R[104],E,E,32,[[["self"]],["typeid"]]],[11,R[100],E,E,32,[[["k"],["self"]],["bool"]]],[11,"into",E,E,33,[[],[U]]],[11,"from",E,E,33,[[[T]],[T]]],[11,R[94],E,E,33,[[["self"]],[T]]],[11,R[95],E,E,33,[[["self"],[T]]]],[11,R[97],E,E,33,[[[U]],[R[15]]]],[11,R[98],E,E,33,[[],[R[15]]]],[11,"borrow",E,E,33,[[["self"]],[T]]],[11,R[99],E,E,33,[[["self"]],[T]]],[11,R[104],E,E,33,[[["self"]],["typeid"]]],[11,R[100],E,E,33,[[["k"],["self"]],["bool"]]],[11,"into",E,E,34,[[],[U]]],[11,"from",E,E,34,[[[T]],[T]]],[11,R[97],E,E,34,[[[U]],[R[15]]]],[11,R[98],E,E,34,[[],[R[15]]]],[11,"borrow",E,E,34,[[["self"]],[T]]],[11,R[99],E,E,34,[[["self"]],[T]]],[11,R[104],E,E,34,[[["self"]],["typeid"]]],[11,R[100],E,E,34,[[["k"],["self"]],["bool"]]],[11,"into",E,E,35,[[],[U]]],[11,"from",E,E,35,[[[T]],[T]]],[11,R[94],E,E,35,[[["self"]],[T]]],[11,R[95],E,E,35,[[["self"],[T]]]],[11,R[96],E,E,35,[[["self"]],["string"]]],[11,R[97],E,E,35,[[[U]],[R[15]]]],[11,R[98],E,E,35,[[],[R[15]]]],[11,"borrow",E,E,35,[[["self"]],[T]]],[11,R[99],E,E,35,[[["self"]],[T]]],[11,R[104],E,E,35,[[["self"]],["typeid"]]],[11,R[100],E,E,35,[[["k"],["self"]],["bool"]]],[11,"into",E,E,36,[[],[U]]],[11,"from",E,E,36,[[[T]],[T]]],[11,R[94],E,E,36,[[["self"]],[T]]],[11,R[95],E,E,36,[[["self"],[T]]]],[11,R[97],E,E,36,[[[U]],[R[15]]]],[11,R[98],E,E,36,[[],[R[15]]]],[11,"borrow",E,E,36,[[["self"]],[T]]],[11,R[99],E,E,36,[[["self"]],[T]]],[11,R[104],E,E,36,[[["self"]],["typeid"]]],[11,R[100],E,E,36,[[["k"],["self"]],["bool"]]],[11,"into",E,E,37,[[],[U]]],[11,"from",E,E,37,[[[T]],[T]]],[11,R[94],E,E,37,[[["self"]],[T]]],[11,R[95],E,E,37,[[["self"],[T]]]],[11,R[97],E,E,37,[[[U]],[R[15]]]],[11,R[98],E,E,37,[[],[R[15]]]],[11,"borrow",E,E,37,[[["self"]],[T]]],[11,R[99],E,E,37,[[["self"]],[T]]],[11,R[104],E,E,37,[[["self"]],["typeid"]]],[11,R[100],E,E,37,[[["k"],["self"]],["bool"]]],[11,"into",E,E,38,[[],[U]]],[11,"from",E,E,38,[[[T]],[T]]],[11,R[94],E,E,38,[[["self"]],[T]]],[11,R[95],E,E,38,[[["self"],[T]]]],[11,R[97],E,E,38,[[[U]],[R[15]]]],[11,R[98],E,E,38,[[],[R[15]]]],[11,"borrow",E,E,38,[[["self"]],[T]]],[11,R[99],E,E,38,[[["self"]],[T]]],[11,R[104],E,E,38,[[["self"]],["typeid"]]],[11,R[100],E,E,38,[[["k"],["self"]],["bool"]]],[11,"into",E,E,39,[[],[U]]],[11,"from",E,E,39,[[[T]],[T]]],[11,R[94],E,E,39,[[["self"]],[T]]],[11,R[95],E,E,39,[[["self"],[T]]]],[11,R[97],E,E,39,[[[U]],[R[15]]]],[11,R[98],E,E,39,[[],[R[15]]]],[11,"borrow",E,E,39,[[["self"]],[T]]],[11,R[99],E,E,39,[[["self"]],[T]]],[11,R[104],E,E,39,[[["self"]],["typeid"]]],[11,R[100],E,E,39,[[["k"],["self"]],["bool"]]],[11,"into",E,E,40,[[],[U]]],[11,"from",E,E,40,[[[T]],[T]]],[11,R[94],E,E,40,[[["self"]],[T]]],[11,R[95],E,E,40,[[["self"],[T]]]],[11,R[97],E,E,40,[[[U]],[R[15]]]],[11,R[98],E,E,40,[[],[R[15]]]],[11,"borrow",E,E,40,[[["self"]],[T]]],[11,R[99],E,E,40,[[["self"]],[T]]],[11,R[104],E,E,40,[[["self"]],["typeid"]]],[11,R[100],E,E,40,[[["k"],["self"]],["bool"]]],[11,"into",E,E,41,[[],[U]]],[11,"from",E,E,41,[[[T]],[T]]],[11,R[94],E,E,41,[[["self"]],[T]]],[11,R[95],E,E,41,[[["self"],[T]]]],[11,R[97],E,E,41,[[[U]],[R[15]]]],[11,R[98],E,E,41,[[],[R[15]]]],[11,"borrow",E,E,41,[[["self"]],[T]]],[11,R[99],E,E,41,[[["self"]],[T]]],[11,R[104],E,E,41,[[["self"]],["typeid"]]],[11,R[100],E,E,41,[[["k"],["self"]],["bool"]]],[11,"into",E,E,42,[[],[U]]],[11,"from",E,E,42,[[[T]],[T]]],[11,R[94],E,E,42,[[["self"]],[T]]],[11,R[95],E,E,42,[[["self"],[T]]]],[11,R[97],E,E,42,[[[U]],[R[15]]]],[11,R[98],E,E,42,[[],[R[15]]]],[11,"borrow",E,E,42,[[["self"]],[T]]],[11,R[99],E,E,42,[[["self"]],[T]]],[11,R[104],E,E,42,[[["self"]],["typeid"]]],[11,R[100],E,E,42,[[["k"],["self"]],["bool"]]],[11,"into",E,E,43,[[],[U]]],[11,"from",E,E,43,[[[T]],[T]]],[11,R[94],E,E,43,[[["self"]],[T]]],[11,R[95],E,E,43,[[["self"],[T]]]],[11,R[97],E,E,43,[[[U]],[R[15]]]],[11,R[98],E,E,43,[[],[R[15]]]],[11,"borrow",E,E,43,[[["self"]],[T]]],[11,R[99],E,E,43,[[["self"]],[T]]],[11,R[104],E,E,43,[[["self"]],["typeid"]]],[11,R[100],E,E,43,[[["k"],["self"]],["bool"]]],[11,R[102],R[71],R[103],44,[[["self"]],[["vec",["u8"]],["error"],[R[15],["vec","error"]]]]],[11,R[101],E,E,44,[[],[[R[15],["error"]],["error"]]]],[11,"into",E,E,44,[[],[U]]],[11,"from",E,E,44,[[[T]],[T]]],[11,R[94],E,E,44,[[["self"]],[T]]],[11,R[95],E,E,44,[[["self"],[T]]]],[11,R[97],E,E,44,[[[U]],[R[15]]]],[11,R[98],E,E,44,[[],[R[15]]]],[11,"borrow",E,E,44,[[["self"]],[T]]],[11,R[99],E,E,44,[[["self"]],[T]]],[11,R[104],E,E,44,[[["self"]],["typeid"]]],[11,R[100],E,E,44,[[["k"],["self"]],["bool"]]],[11,"into",E,E,45,[[],[U]]],[11,"from",E,E,45,[[[T]],[T]]],[11,R[94],E,E,45,[[["self"]],[T]]],[11,R[95],E,E,45,[[["self"],[T]]]],[11,R[97],E,E,45,[[[U]],[R[15]]]],[11,R[98],E,E,45,[[],[R[15]]]],[11,"borrow",E,E,45,[[["self"]],[T]]],[11,R[99],E,E,45,[[["self"]],[T]]],[11,R[104],E,E,45,[[["self"]],["typeid"]]],[11,R[100],E,E,45,[[["k"],["self"]],["bool"]]],[11,R[102],E,R[103],46,[[["self"]],[["vec",["u8"]],["error"],[R[15],["vec","error"]]]]],[11,R[101],E,E,46,[[],[[R[15],["error"]],["error"]]]],[11,"into",E,E,46,[[],[U]]],[11,"from",E,E,46,[[[T]],[T]]],[11,R[94],E,E,46,[[["self"]],[T]]],[11,R[95],E,E,46,[[["self"],[T]]]],[11,R[97],E,E,46,[[[U]],[R[15]]]],[11,R[98],E,E,46,[[],[R[15]]]],[11,"borrow",E,E,46,[[["self"]],[T]]],[11,R[99],E,E,46,[[["self"]],[T]]],[11,R[104],E,E,46,[[["self"]],["typeid"]]],[11,R[100],E,E,46,[[["k"],["self"]],["bool"]]],[11,"into",E,E,47,[[],[U]]],[11,"from",E,E,47,[[[T]],[T]]],[11,R[97],E,E,47,[[[U]],[R[15]]]],[11,R[98],E,E,47,[[],[R[15]]]],[11,"borrow",E,E,47,[[["self"]],[T]]],[11,R[99],E,E,47,[[["self"]],[T]]],[11,R[104],E,E,47,[[["self"]],["typeid"]]],[11,"clone",R[19],E,50,[[["self"]],["url"]]],[11,"clone",E,E,0,[[["self"]],[R[107]]]],[11,"fmt",E,E,0,[[[R[106]],["self"]],[["error"],[R[15],["error"]]]]],[11,"fmt",E,E,50,[[[R[106]],["self"]],[["error"],[R[15],["error"]]]]],[11,R[137],E,E,50,[[["str"]],[[R[107]],["url"],[R[15],["url",R[107]]]]]],[11,"partial_cmp",E,E,50,[[["self"],["url"]],[["option",[R[109]]],[R[109]]]]],[11,R[51],E,E,0,[[["self"]],["str"]]],[11,"index",E,E,50,[[["rangefrom",[R[108]]],["self"],[R[108]]],["str"]]],[11,"index",E,E,50,[[["rangeto",[R[108]]],["self"],[R[108]]],["str"]]],[11,"index",E,E,50,[[["range",[R[108]]],["self"],[R[108]]],["str"]]],[11,"index",E,E,50,[[["self"],["rangefull"]],["str"]]],[11,"from",E,E,0,[[["errors"]],[R[107]]]],[11,"fmt",E,E,0,[[[R[106]],["self"]],[["error"],[R[15],["error"]]]]],[11,"fmt",E,E,50,[[[R[106]],["self"]],[["error"],[R[15],["error"]]]]],[11,"as_ref",E,E,50,[[["self"]],["str"]]],[11,"hash",E,E,50,[[["self"],["h"]]]],[11,"eq",E,E,0,[[[R[107]],["self"]],["bool"]]],[11,"eq",E,E,50,[[["self"],["url"]],["bool"]]],[11,"cmp",E,E,50,[[["self"],["url"]],[R[109]]]],[11,R[102],R[71],E,46,[[["self"]],[[R[15],["vec","error"]],["vec",["u8"]],["error"]]]],[11,R[101],E,E,46,[[],[["error"],[R[15],["error"]]]]],[11,R[102],R[19],E,49,[[["self"]],[[R[15],["vec","error"]],["vec",["u8"]],["error"]]]],[11,R[101],E,R[110],49,[[],[["error"],[R[15],["error"]]]]],[11,R[111],E,E,49,[[["self"]],[["error"],[R[15],[R[87],"error"]],[R[87]]]]],[11,R[112],E,E,49,[[["b"]],[["error"],[R[15],["error"]]]]],[11,"as_ref",E,E,49,[[["self"]]]],[11,"as_ref",E,E,10,[[["self"]],["str"]]],[11,"into",E,E,52,[[],[["utc"],["datetime",["utc"]]]]],[11,"from",R[6],E,11,[[["string"]],["error"]]],[11,"from",E,E,11,[[["error"]],["error"]]],[11,"from",E,E,11,[[[R[113]]],["error"]]],[11,"from",E,E,11,[[["utf8error"]],["error"]]],[11,"from",E,E,11,[[[R[90]]],["error"]]],[11,"from",E,E,11,[[[R[113]]],["error"]]],[11,"from",E,E,11,[[["error"]],["error"]]],[11,"from",E,E,11,[[[R[107]]],["error"]]],[11,"from",E,E,11,[[["keyrejected"]],["error"]]],[11,"from",E,E,11,[[[R[12]]],["self"]]],[11,"from",E,E,11,[[["fromutf8error"]],["self"]]],[11,"from",R[23],E,24,[[[R[86]]],["self"]]],[11,"from",R[71],E,47,[[[R[115]]],["self"]]],[11,"from",E,E,44,[[[R[86]]],["self"]]],[11,"from",R[19],E,52,[[["utc"],["datetime",["utc"]]],["self"]]],[11,"from",E,E,52,[[["i64"]],["self"]]],[11,"clone",E,E,7,[[["self"]],["presence"]]],[11,"clone",E,E,1,[[["self"]],[R[92]]]],[11,"clone",E,E,8,[[["self"]],[R[91]]]],[11,"clone",R[6],E,13,[[["self"]],[R[90]]]],[11,"clone",R[13],E,16,[[["self"]],[R[18]]]],[11,"clone",E,E,17,[[["self"]],[R[41]]]],[11,"clone",E,E,18,[[["self"]],[R[73]]]],[11,"clone",E,E,19,[[["self"]],[R[25]]]],[11,"clone",E,E,20,[[["self"]],[R[114]]]],[11,"clone",E,E,21,[[["self"]],[R[17]]]],[11,"clone",E,E,15,[[["self"]],[R[16]]]],[11,"clone",R[23],E,25,[[["self"]],[R[125]]]],[11,"clone",E,E,22,[[["self"]],[R[86]]]],[11,"clone",E,E,23,[[["self"]],[R[118]]]],[11,"clone",E,E,24,[[["self"]],[R[29]]]],[11,"clone",E,E,26,[[["self"]],[R[27]]]],[11,"clone",R[105],E,35,[[["self"]],["keytype"]]],[11,"clone",E,E,36,[[["self"]],[R[126]]]],[11,"clone",E,E,37,[[["self"]],[R[127]]]],[11,"clone",E,E,27,[[["self"]],[R[119]]]],[11,"clone",E,E,38,[[["self"]],[R[128]]]],[11,"clone",E,E,28,[[["self"]],[R[120]]]],[11,"clone",E,E,29,[[["self"]],[R[115]]]],[11,"clone",E,E,30,[[["self"]],[R[129]]]],[11,"clone",E,E,31,[[["self"]],[R[121]]]],[11,"clone",E,E,32,[[["self"]],[R[122]]]],[11,"clone",E,E,39,[[["self"]],[R[130]]]],[11,"clone",E,E,40,[[["self"]],[R[131]]]],[11,"clone",E,E,41,[[["self"]],[R[132]]]],[11,"clone",E,E,42,[[["self"]],[R[133]]]],[11,"clone",E,E,43,[[["self"]],[R[134]]]],[11,"clone",E,E,33,[[["self"]],["jwk"]]],[11,"clone",R[71],E,46,[[["self"]],[R[27]]]],[11,"clone",E,E,44,[[["self"]],[R[29]]]],[11,"clone",E,E,45,[[["self"]],[R[86]]]],[11,"clone",R[19],E,51,[[["self"]],["empty"]]],[11,"clone",E,E,49,[[["self"]],[R[87]]]],[11,"clone",E,E,2,[[["self"]],[R[27]]]],[11,"clone",E,E,9,[[["self"]],[R[135]]]],[11,"clone",E,E,10,[[["self"]],[R[93]]]],[11,"clone",E,E,52,[[["self"]],[R[136]]]],[11,"clone",E,E,3,[[["self"]],[R[123]]]],[11,"clone",E,E,4,[[["self"]],[R[116]]]],[11,"clone",E,E,5,[[["self"]],[R[83]]]],[11,"clone",E,E,6,[[["self"]],[R[124]]]],[11,R[117],E,E,7,[[],["self"]]],[11,R[117],E,E,1,[[],["self"]]],[11,R[117],E,E,8,[[],["self"]]],[11,R[117],R[13],E,15,[[],[R[16]]]],[11,R[117],E,E,16,[[],["self"]]],[11,R[117],E,E,18,[[],["self"]]],[11,R[117],E,E,19,[[],["self"]]],[11,R[117],E,E,21,[[],["self"]]],[11,R[117],R[23],E,22,[[],[R[86]]]],[11,R[117],E,E,23,[[],[R[118]]]],[11,R[117],E,E,24,[[],[R[29]]]],[11,R[117],R[105],E,27,[[],[R[119]]]],[11,R[117],E,E,28,[[],[R[120]]]],[11,R[117],E,E,29,[[],[R[115]]]],[11,R[117],E,E,31,[[],[R[121]]]],[11,R[117],E,E,32,[[],[R[122]]]],[11,R[117],E,E,39,[[],["self"]]],[11,R[117],E,E,40,[[],["self"]]],[11,R[117],E,E,41,[[],["self"]]],[11,R[117],E,E,42,[[],["self"]]],[11,R[117],E,E,43,[[],["self"]]],[11,R[117],R[71],E,44,[[],[R[29]]]],[11,R[117],E,E,45,[[],[R[86]]]],[11,R[117],R[19],E,51,[[],["empty"]]],[11,R[117],E,E,2,[[],["self"]]],[11,R[117],E,E,3,[[],[R[123]]]],[11,R[117],E,E,4,[[],[R[116]]]],[11,R[117],E,E,5,[[],["self"]]],[11,R[117],E,E,6,[[],[R[124]]]],[11,"eq",E,E,7,[[["self"],["presence"]],["bool"]]],[11,"eq",E,E,1,[[["self"],[R[92]]],["bool"]]],[11,"ne",E,E,1,[[["self"],[R[92]]],["bool"]]],[11,"eq",E,E,8,[[[R[91]],["self"]],["bool"]]],[11,"ne",E,E,8,[[[R[91]],["self"]],["bool"]]],[11,"eq",R[6],E,13,[[[R[90]],["self"]],["bool"]]],[11,"ne",E,E,13,[[[R[90]],["self"]],["bool"]]],[11,"eq",R[13],E,16,[[[R[18]],["self"]],["bool"]]],[11,"ne",E,E,16,[[[R[18]],["self"]],["bool"]]],[11,"eq",E,E,17,[[[R[41]],["self"]],["bool"]]],[11,"ne",E,E,17,[[[R[41]],["self"]],["bool"]]],[11,"eq",E,E,18,[[[R[73]],["self"]],["bool"]]],[11,"eq",E,E,19,[[[R[25]],["self"]],["bool"]]],[11,"eq",E,E,20,[[[R[114]],["self"]],["bool"]]],[11,"eq",E,E,21,[[["self"],[R[17]]],["bool"]]],[11,"eq",E,E,15,[[[R[16]],["self"]],["bool"]]],[11,"ne",E,E,15,[[[R[16]],["self"]],["bool"]]],[11,"eq",R[23],E,25,[[[R[125]],["self"]],["bool"]]],[11,"ne",E,E,25,[[[R[125]],["self"]],["bool"]]],[11,"eq",E,E,22,[[[R[86]],["self"]],["bool"]]],[11,"ne",E,E,22,[[[R[86]],["self"]],["bool"]]],[11,"eq",E,E,23,[[["self"],[R[118]]],["bool"]]],[11,"ne",E,E,23,[[["self"],[R[118]]],["bool"]]],[11,"eq",E,E,24,[[["self"],[R[29]]],["bool"]]],[11,"ne",E,E,24,[[["self"],[R[29]]],["bool"]]],[11,"eq",E,E,26,[[[R[27]],["self"]],["bool"]]],[11,"ne",E,E,26,[[[R[27]],["self"]],["bool"]]],[11,"eq",R[105],E,35,[[["keytype"],["self"]],["bool"]]],[11,"eq",E,E,36,[[[R[126]],["self"]],["bool"]]],[11,"ne",E,E,36,[[[R[126]],["self"]],["bool"]]],[11,"eq",E,E,37,[[["self"],[R[127]]],["bool"]]],[11,"ne",E,E,37,[[["self"],[R[127]]],["bool"]]],[11,"eq",E,E,27,[[["self"],[R[119]]],["bool"]]],[11,"ne",E,E,27,[[["self"],[R[119]]],["bool"]]],[11,"eq",E,E,38,[[[R[128]],["self"]],["bool"]]],[11,"ne",E,E,38,[[[R[128]],["self"]],["bool"]]],[11,"eq",E,E,28,[[[R[120]],["self"]],["bool"]]],[11,"ne",E,E,28,[[[R[120]],["self"]],["bool"]]],[11,"eq",E,E,29,[[[R[115]],["self"]],["bool"]]],[11,"ne",E,E,29,[[[R[115]],["self"]],["bool"]]],[11,"eq",E,E,30,[[[R[129]],["self"]],["bool"]]],[11,"ne",E,E,30,[[[R[129]],["self"]],["bool"]]],[11,"eq",E,E,31,[[["self"],[R[121]]],["bool"]]],[11,"ne",E,E,31,[[["self"],[R[121]]],["bool"]]],[11,"eq",E,E,32,[[[R[122]],["self"]],["bool"]]],[11,"ne",E,E,32,[[[R[122]],["self"]],["bool"]]],[11,"eq",E,E,39,[[[R[130]],["self"]],["bool"]]],[11,"eq",E,E,40,[[[R[131]],["self"]],["bool"]]],[11,"eq",E,E,41,[[[R[132]],["self"]],["bool"]]],[11,"eq",E,E,42,[[["self"],[R[133]]],["bool"]]],[11,"eq",E,E,43,[[[R[134]],["self"]],["bool"]]],[11,"eq",E,E,33,[[["jwk"],["self"]],["bool"]]],[11,"ne",E,E,33,[[["jwk"],["self"]],["bool"]]],[11,"eq",E,E,34,[[["self"],["jwkset"]],["bool"]]],[11,"ne",E,E,34,[[["self"],["jwkset"]],["bool"]]],[11,"eq",R[71],E,46,[[[R[27]],["self"]],["bool"]]],[11,"ne",E,E,46,[[[R[27]],["self"]],["bool"]]],[11,"eq",E,E,44,[[[R[29]],["self"]],["bool"]]],[11,"ne",E,E,44,[[[R[29]],["self"]],["bool"]]],[11,"eq",E,E,45,[[["self"],[R[86]]],["bool"]]],[11,"ne",E,E,45,[[["self"],[R[86]]],["bool"]]],[11,"eq",R[19],E,51,[[["self"],["empty"]],["bool"]]],[11,"eq",E,E,49,[[["self"],[R[87]]],["bool"]]],[11,"ne",E,E,49,[[["self"],[R[87]]],["bool"]]],[11,"eq",E,E,2,[[[R[27]],["self"]],["bool"]]],[11,"ne",E,E,2,[[[R[27]],["self"]],["bool"]]],[11,"eq",E,E,9,[[["self"],[R[135]]],["bool"]]],[11,"ne",E,E,9,[[["self"],[R[135]]],["bool"]]],[11,"eq",E,E,10,[[["self"],[R[93]]],["bool"]]],[11,"ne",E,E,10,[[["self"],[R[93]]],["bool"]]],[11,"eq",E,E,52,[[["self"],[R[136]]],["bool"]]],[11,"ne",E,E,52,[[["self"],[R[136]]],["bool"]]],[11,"eq",E,E,3,[[["self"],[R[123]]],["bool"]]],[11,"ne",E,E,3,[[["self"],[R[123]]],["bool"]]],[11,"eq",E,E,4,[[[R[116]],["self"]],["bool"]]],[11,"ne",E,E,4,[[[R[116]],["self"]],["bool"]]],[11,"eq",E,E,5,[[[R[83]],["self"]],["bool"]]],[11,"ne",E,E,5,[[[R[83]],["self"]],["bool"]]],[11,"eq",E,E,6,[[[R[124]],["self"]],["bool"]]],[11,"ne",E,E,6,[[[R[124]],["self"]],["bool"]]],[11,"fmt",R[6],E,11,[[["self"],[R[106]]],[R[15]]]],[11,"fmt",E,E,12,[[["self"],[R[106]]],[R[15]]]],[11,"fmt",E,E,13,[[["self"],[R[106]]],[R[15]]]],[11,"fmt",R[13],E,16,[[["self"],[R[106]]],[R[15]]]],[11,"fmt",R[105],E,35,[[["self"],[R[106]]],[R[15]]]],[11,"fmt",R[19],E,2,[[["self"],[R[106]]],[R[15]]]],[11,"fmt",E,E,10,[[["self"],[R[106]]],[R[15]]]],[11,"fmt",E,E,7,[[["self"],[R[106]]],[R[15]]]],[11,"fmt",E,E,1,[[["self"],[R[106]]],[R[15]]]],[11,"fmt",E,E,8,[[["self"],[R[106]]],[R[15]]]],[11,"fmt",R[6],E,11,[[["self"],[R[106]]],[R[15]]]],[11,"fmt",E,E,12,[[["self"],[R[106]]],[R[15]]]],[11,"fmt",E,E,13,[[["self"],[R[106]]],[R[15]]]],[11,"fmt",R[13],E,16,[[["self"],[R[106]]],[R[15]]]],[11,"fmt",E,E,17,[[["self"],[R[106]]],[R[15]]]],[11,"fmt",E,E,18,[[["self"],[R[106]]],[R[15]]]],[11,"fmt",E,E,19,[[["self"],[R[106]]],[R[15]]]],[11,"fmt",E,E,20,[[["self"],[R[106]]],[R[15]]]],[11,"fmt",E,E,21,[[["self"],[R[106]]],[R[15]]]],[11,"fmt",E,E,15,[[["self"],[R[106]]],[R[15]]]],[11,"fmt",R[23],E,25,[[["self"],[R[106]]],[R[15]]]],[11,"fmt",E,E,22,[[["self"],[R[106]]],[R[15]]]],[11,"fmt",E,E,23,[[["self"],[R[106]]],[R[15]]]],[11,"fmt",E,E,24,[[["self"],[R[106]]],[R[15]]]],[11,"fmt",E,E,26,[[["self"],[R[106]]],[R[15]]]],[11,"fmt",R[105],E,35,[[["self"],[R[106]]],[R[15]]]],[11,"fmt",E,E,36,[[["self"],[R[106]]],[R[15]]]],[11,"fmt",E,E,37,[[["self"],[R[106]]],[R[15]]]],[11,"fmt",E,E,27,[[["self"],[R[106]]],[R[15]]]],[11,"fmt",E,E,38,[[["self"],[R[106]]],[[R[15],["error"]],["error"]]]],[11,"fmt",E,E,39,[[["self"],[R[106]]],[R[15]]]],[11,"fmt",E,E,40,[[["self"],[R[106]]],[R[15]]]],[11,"fmt",E,E,41,[[["self"],[R[106]]],[R[15]]]],[11,"fmt",E,E,42,[[["self"],[R[106]]],[R[15]]]],[11,"fmt",E,E,43,[[["self"],[R[106]]],[R[15]]]],[11,"fmt",E,E,33,[[["self"],[R[106]]],[R[15]]]],[11,"fmt",E,E,34,[[["self"],[R[106]]],[R[15]]]],[11,"fmt",R[71],E,46,[[["self"],[R[106]]],[R[15]]]],[11,"fmt",E,E,44,[[["self"],[R[106]]],[R[15]]]],[11,"fmt",E,E,45,[[["self"],[R[106]]],[R[15]]]],[11,"fmt",R[19],E,51,[[["self"],[R[106]]],[R[15]]]],[11,"fmt",E,E,49,[[["self"],[R[106]]],[R[15]]]],[11,"fmt",E,E,2,[[["self"],[R[106]]],[R[15]]]],[11,"fmt",E,E,9,[[["self"],[R[106]]],[R[15]]]],[11,"fmt",E,E,10,[[["self"],[R[106]]],[R[15]]]],[11,"fmt",E,E,52,[[["self"],[R[106]]],[R[15]]]],[11,"fmt",E,E,3,[[["self"],[R[106]]],[R[15]]]],[11,"fmt",E,E,4,[[["self"],[R[106]]],[R[15]]]],[11,"fmt",E,E,6,[[["self"],[R[106]]],[R[15]]]],[11,R[137],E,"This never fails",49,[[["str"]],[R[15]]]],[11,R[137],E,"Parses a `&str` into a `StringOrUri`. According to RFC…",10,[[["str"]],[R[15]]]],[11,"deref",E,E,49,[[["self"]],["str"]]],[11,"deref",E,E,52,[[["self"]]]],[11,"hash",E,E,10,[[["self"],["__h"]]]],[11,"borrow",E,E,49,[[["self"]],["str"]]],[11,"source",R[6],E,11,[[["self"]],[["option",["error"]],["error"]]]],[11,"source",E,E,12,[[["self"]],[["option",["error"]],["error"]]]],[11,"source",E,E,13,[[["self"]],[["option",["error"]],["error"]]]],[11,R[138],R[13],E,17,[[["self"],["__s"]],[R[15]]]],[11,R[138],E,E,18,[[["self"],["__s"]],[R[15]]]],[11,R[138],E,E,19,[[["self"],["__s"]],[R[15]]]],[11,R[138],E,E,20,[[["self"],["__s"]],[R[15]]]],[11,R[138],E,E,21,[[["self"],["__s"]],[R[15]]]],[11,R[138],R[23],E,25,[[["s"],["self"]],[R[15]]]],[11,R[138],E,E,22,[[["self"],["__s"]],[R[15]]]],[11,R[138],E,E,23,[[["self"],["__s"]],[R[15]]]],[11,R[138],E,E,24,[[["self"],["__s"]],[R[15]]]],[11,R[138],E,E,26,[[["self"],["__s"]],[R[15]]]],[11,R[138],R[105],E,35,[[["self"],["__s"]],[R[15]]]],[11,R[138],E,E,36,[[["s"],["self"]],[R[15]]]],[11,R[138],E,E,37,[[["s"],["self"]],[R[15]]]],[11,R[138],E,E,27,[[["self"],["__s"]],[R[15]]]],[11,R[138],E,E,38,[[["self"],["__s"]],[R[15]]]],[11,R[138],E,E,28,[[["self"],["__s"]],[R[15]]]],[11,R[138],E,E,29,[[["self"],["__s"]],[R[15]]]],[11,R[138],E,E,30,[[["self"],["__s"]],[R[15]]]],[11,R[138],E,E,31,[[["self"],["__s"]],[R[15]]]],[11,R[138],E,E,32,[[["self"],["__s"]],[R[15]]]],[11,R[138],E,E,39,[[["self"],["__s"]],[R[15]]]],[11,R[138],E,E,40,[[["self"],["__s"]],[R[15]]]],[11,R[138],E,E,41,[[["self"],["__s"]],[R[15]]]],[11,R[138],E,E,42,[[["self"],["__s"]],[R[15]]]],[11,R[138],E,E,43,[[["self"],["__s"]],[R[15]]]],[11,R[138],E,E,33,[[["self"],["__s"]],[R[15]]]],[11,R[138],E,E,34,[[["self"],["__s"]],[R[15]]]],[11,R[138],R[71],E,46,[[["self"],["__s"]],[R[15]]]],[11,R[138],E,E,44,[[["self"],["__s"]],[R[15]]]],[11,R[138],E,E,45,[[["self"],["__s"]],[R[15]]]],[11,R[138],R[19],E,51,[[["self"],["__s"]],[R[15]]]],[11,R[138],E,E,49,[[["self"],["__s"]],[R[15]]]],[11,R[138],E,E,2,[[["s"],["self"]],[R[15]]]],[11,R[138],E,E,9,[[["self"],["__s"]],[R[15]]]],[11,R[138],E,E,10,[[["s"],["self"]],[R[15]]]],[11,R[138],E,E,52,[[["s"],["self"]],[R[15]]]],[11,R[138],E,E,3,[[["self"],["__s"]],[R[15]]]],[11,R[138],E,E,6,[[["self"],["__s"]],[R[15]]]],[11,R[139],R[13],E,17,[[["__d"]],[R[15]]]],[11,R[139],E,E,18,[[["__d"]],[R[15]]]],[11,R[139],E,E,19,[[["__d"]],[R[15]]]],[11,R[139],E,E,20,[[["__d"]],[R[15]]]],[11,R[139],E,E,21,[[["__d"]],[R[15]]]],[11,R[139],R[23],E,25,[[["d"]],[R[15]]]],[11,R[139],E,E,22,[[["__d"]],[R[15]]]],[11,R[139],E,E,23,[[["__d"]],[R[15]]]],[11,R[139],E,E,24,[[["__d"]],[R[15]]]],[11,R[139],E,E,26,[[["__d"]],[R[15]]]],[11,R[139],R[105],E,35,[[["__d"]],[R[15]]]],[11,R[139],E,E,36,[[["d"]],[R[15]]]],[11,R[139],E,E,37,[[["d"]],[R[15]]]],[11,R[139],E,E,27,[[["__d"]],[R[15]]]],[11,R[139],E,E,38,[[["__d"]],[R[15]]]],[11,R[139],E,E,28,[[["__d"]],[R[15]]]],[11,R[139],E,E,29,[[["__d"]],[R[15]]]],[11,R[139],E,E,30,[[["__d"]],[R[15]]]],[11,R[139],E,E,31,[[["__d"]],[R[15]]]],[11,R[139],E,E,32,[[["__d"]],[R[15]]]],[11,R[139],E,E,39,[[["__d"]],[R[15]]]],[11,R[139],E,E,40,[[["__d"]],[R[15]]]],[11,R[139],E,E,41,[[["__d"]],[R[15]]]],[11,R[139],E,E,42,[[["__d"]],[R[15]]]],[11,R[139],E,E,43,[[["__d"]],[R[15]]]],[11,R[139],E,E,33,[[["__d"]],[R[15]]]],[11,R[139],E,E,34,[[["__d"]],[R[15]]]],[11,R[139],R[71],E,46,[[["__d"]],[R[15]]]],[11,R[139],E,E,44,[[["__d"]],[R[15]]]],[11,R[139],E,E,45,[[["__d"]],[R[15]]]],[11,R[139],R[19],E,51,[[["__d"]],[R[15]]]],[11,R[139],E,E,49,[[["__d"]],[R[15]]]],[11,R[139],E,E,2,[[["d"]],[R[15]]]],[11,R[139],E,E,9,[[["__d"]],[R[15]]]],[11,R[139],E,E,10,[[["d"]],[[R[93]],[R[15],[R[93]]]]]],[11,R[139],E,E,52,[[["d"]],[R[15]]]],[11,R[139],E,E,3,[[["__d"]],[R[15]]]],[11,R[139],E,E,6,[[["__d"]],[R[15]]]],[11,"parse",E,"Parse an absolute URL from a string.",50,[[["str"]],[[R[107]],["url"],[R[15],["url",R[107]]]]]],[11,"parse_with_params",E,"Parse an absolute URL from a string and add params to its…",50,[[["str"],["i"]],[[R[107]],["url"],[R[15],["url",R[107]]]]]],[11,"join",E,"Parse a string as an URL, with this URL as the base URL.",50,[[["str"],["self"]],[[R[107]],["url"],[R[15],["url",R[107]]]]]],[11,"options",E,"Return a default `ParseOptions` that can fully configure…",50,[[],["parseoptions"]]],[11,"as_str",E,R[140],50,[[["self"]],["str"]]],[11,"into_string",E,R[140],50,[[],["string"]]],[11,"origin",E,"Return the origin of this URL…",50,[[["self"]],["origin"]]],[11,"scheme",E,"Return the scheme of this URL, lower-cased, as an ASCII…",50,[[["self"]],["str"]]],[11,"has_authority",E,"Return whether the URL has an 'authority', which can…",50,[[["self"]],["bool"]]],[11,"cannot_be_a_base",E,"Return whether this URL is a cannot-be-a-base URL, meaning…",50,[[["self"]],["bool"]]],[11,"username",E,"Return the username for this URL (typically the empty…",50,[[["self"]],["str"]]],[11,"password",E,"Return the password for this URL, if any, as a…",50,[[["self"]],[["option",["str"]],["str"]]]],[11,"has_host",E,"Equivalent to `url.host().is_some()`.",50,[[["self"]],["bool"]]],[11,"host_str",E,"Return the string representation of the host (domain or IP…",50,[[["self"]],[["option",["str"]],["str"]]]],[11,"host",E,"Return the parsed representation of the host for this URL.…",50,[[["self"]],[["option",["host"]],["host",["str"]]]]],[11,"domain",E,"If this URL has a host and it is a domain name (not an IP…",50,[[["self"]],[["option",["str"]],["str"]]]],[11,"port",E,"Return the port number for this URL, if any.",50,[[["self"]],[["option",["u16"]],["u16"]]]],[11,"port_or_known_default",E,"Return the port number for this URL, or the default port…",50,[[["self"]],[["option",["u16"]],["u16"]]]],[11,"socket_addrs",E,"Resolve a URL’s host and port number to `SocketAddr`.",50,[[["self"]],[["error"],["vec",["socketaddr"]],[R[15],["vec","error"]]]]],[11,"path",E,"Return the path for this URL, as a percent-encoded ASCII…",50,[[["self"]],["str"]]],[11,"path_segments",E,"Unless this URL is cannot-be-a-base, return an iterator of…",50,[[["self"]],[["split",["char"]],["option",["split"]]]]],[11,"query",E,"Return this URL’s query string, if any, as a…",50,[[["self"]],[["option",["str"]],["str"]]]],[11,"query_pairs",E,"Parse the URL’s query string, if any, as…",50,[[["self"]],["parse"]]],[11,"fragment",E,"Return this URL’s fragment identifier, if any.",50,[[["self"]],[["option",["str"]],["str"]]]],[11,"set_fragment",E,"Change this URL’s fragment identifier.",50,[[["option",["str"]],["self"],["str"]]]],[11,"set_query",E,"Change this URL’s query string.",50,[[["option",["str"]],["self"],["str"]]]],[11,"query_pairs_mut",E,"Manipulate this URL’s query string, viewed as a sequence…",50,[[["self"]],[["urlquery"],["serializer",["urlquery"]]]]],[11,"set_path",E,"Change this URL’s path.",50,[[["str"],["self"]]]],[11,"path_segments_mut",E,"Return an object with methods to manipulate this URL’s…",50,[[["self"]],[[R[15],[R[141]]],[R[141]]]]],[11,"set_port",E,"Change this URL’s port number.",50,[[["option",["u16"]],["self"],["u16"]],[R[15]]]],[11,"set_host",E,"Change this URL’s host.",50,[[["option",["str"]],["self"],["str"]],[[R[15],[R[107]]],[R[107]]]]],[11,"set_ip_host",E,"Change this URL’s host to the given IP address.",50,[[["self"],["ipaddr"]],[R[15]]]],[11,"set_password",E,"Change this URL’s password.",50,[[["option",["str"]],["self"],["str"]],[R[15]]]],[11,"set_username",E,"Change this URL’s username.",50,[[["str"],["self"]],[R[15]]]],[11,"set_scheme",E,"Change this URL’s scheme.",50,[[["str"],["self"]],[R[15]]]],[11,"from_file_path",E,"Convert a file name as `std::path::Path` into an URL in…",50,[[["p"]],[[R[15],["url"]],["url"]]]],[11,"from_directory_path",E,"Convert a directory name as `std::path::Path` into an URL…",50,[[["p"]],[[R[15],["url"]],["url"]]]],[11,"to_file_path",E,"Assuming the URL is in the `file` scheme or similar,…",50,[[["self"]],[[R[15],["pathbuf"]],["pathbuf"]]]]],"p":[[4,R[142]],[3,R[143]],[3,R[68]],[3,R[144]],[3,R[145]],[3,R[146]],[3,R[147]],[4,"Presence"],[4,R[148]],[4,R[149]],[4,R[150]],[4,"Error"],[4,R[10]],[4,R[11]],[8,R[151]],[3,R[152]],[4,R[153]],[4,R[154]],[4,R[155]],[4,R[156]],[4,R[157]],[4,R[158]],[3,R[58]],[3,R[159]],[3,"Header"],[4,R[160]],[4,R[68]],[3,R[161]],[3,R[162]],[3,R[163]],[3,R[164]],[3,R[165]],[3,R[166]],[3,"JWK"],[3,"JWKSet"],[4,"KeyType"],[4,R[167]],[4,R[168]],[4,R[169]],[4,R[170]],[4,R[171]],[4,R[172]],[4,R[173]],[4,R[43]],[3,"Header"],[3,R[58]],[4,R[68]],[4,"Secret"],[8,R[174]],[3,R[175]],[3,"Url"],[3,"Empty"],[3,R[176]]]};
initSearch(searchIndex);addSearchOptions(searchIndex);